#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) Copyright 2022 Sensirion AG, Switzerland
#
#     THIS FILE IS AUTOMATICALLY GENERATED!
#
# Generator:    sensirion-driver-generator 0.9.1
# Product:      sht4x
# Version:      None
#

import time
from sensirion_i2c_driver import LinuxI2cTransceiver, I2cConnection, CrcCalculator
from sensirion_i2c_adapter.i2c_channel import I2cChannel
from sensirion_i2c_sht4x.device import Sht4xDevice
with LinuxI2cTransceiver('/dev/i2c-1') as i2c_transceiver:
    channel = I2cChannel(I2cConnection(i2c_transceiver),
                         slave_address=0x44,
                         crc=CrcCalculator(8, 0x31, 0xff, 0x0))
    sensor = Sht4xDevice(channel)
    try:
        sensor.soft_reset()
        time.sleep(0.01)
    except BaseException:
        ...
    serial_number = sensor.serial_number()
    print(f"serial_number: {serial_number}; "
          )
    for i in range(500):
        try:
            time.sleep(0.02)
            (a_temperature, a_humidity
             ) = sensor.measure_lowest_precision()
            print(f"a_temperature: {a_temperature}; "
                  f"a_humidity: {a_humidity}; "
                  )
        except BaseException:
            continue