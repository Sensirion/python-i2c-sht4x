#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) Copyright 2022 Sensirion AG, Switzerland
#
#     THIS FILE IS AUTOMATICALLY GENERATED!
#
# Generator:    sensirion-driver-generator 0.9.1
# Product:      sht4x
# Version:      None
#

from sensirion_driver_support_types.signals import AbstractSignal


class SignalTemperature(AbstractSignal):

    def __init__(self, temperature_ticks):
        self._temperature = float(temperature_ticks)
        self._temperature = ((self._temperature * 175.0) / 65535.0) - 45.0

    @property
    def value(self):
        return self._temperature

    def __str__(self):
        return '{0:.2f}'.format(self.value)


class SignalHumidity(AbstractSignal):

    def __init__(self, humidity_ticks):
        self._humidity = float(humidity_ticks)
        self._humidity = ((self._humidity * 125.0) / 65535.0) - 6.0

    @property
    def value(self):
        return self._humidity

    def __str__(self):
        return '{0:.2f}'.format(self.value)

